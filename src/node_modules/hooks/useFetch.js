import { useState, useEffect, useCallback } from 'react'
import axios from 'axios'

export default (url) => {
    const baseUrl = 'http://localhost:8080/api'
    const [isLoading, setIsLoading] = useState(false)
    const [response, setResponse] = useState(null)
    const [error, setError] = useState(null)
    const [options, setOptions] = useState({})

    const doFetch = useCallback((options = {}) => {
        setOptions(options)
        setIsLoading(true)
    }, [])

    useEffect(() => {
        if (!isLoading) {
            return
        }

        axios(baseUrl + url)
            .then(res => {
                setResponse(res.data)
                setIsLoading(false)
            })
            .catch(error => {
               setError(error.response.data)
               setIsLoading(false)
            })
    }, [isLoading, url, options])

    return [{ isLoading, response, error }, doFetch]
}